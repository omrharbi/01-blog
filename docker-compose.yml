version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: blog-postgres
    environment:
      POSTGRES_DB: db_blog
      POSTGRES_USER: omrharbi
      POSTGRES_PASSWORD: omrharbi
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - blog-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U omrharbi -d db_blog"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Spring Boot Backend
  backend:
    build:
      context: ./backend/01-blog
      dockerfile: Dockerfile
    container_name: blog-backend
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/db_blog
      SPRING_DATASOURCE_USERNAME: omrharbi
      SPRING_DATASOURCE_PASSWORD: omrharbi
      JWT_SECRET: mySecretKeyForJWT1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789
      SERVER_PORT: 9090
    ports:
      - "9090:9090"
    volumes:
      - ./uploads:/app/uploads
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - blog-network
    restart: unless-stopped

  # Angular Frontend (Development Server)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: blog-frontend
    ports:
      - "4200:4200"
    depends_on:
      - backend
    networks:
      - blog-network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  blog-network:
    driver: bridge